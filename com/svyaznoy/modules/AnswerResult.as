package com.svyaznoy.modules {	import caurina.transitions.Tweener;	import com.flashgangsta.managers.MappingManager;	import flash.display.Sprite;	import flash.geom.ColorTransform;	import flash.text.TextField;	import flash.text.TextFieldAutoSize;		/**	 * ...	 * @author Sergey Krivtsov (flashgangsta@gmail.com)	 */	public class AnswerResult extends Sprite {				private const COLORS:Vector.<uint> = new <uint>[ 0xA28BB3, 0xFFD868, 0xB4D58C, 0xFFAD5F, 0x8CC3E7 ];		private const TWEEN_TIME:int = 1;		private const TWEEN_TRANSITIONS:String = "easeInOutCubic";				private var answerLabel:TextField;		private var votesLabel:TextField;		private var progressbar:Sprite;		private var calculateObject:Object = { };				/**		 * 		 */				public function AnswerResult() {			answerLabel = getChildByName( "answerLabel_txt" ) as TextField;			votesLabel = getChildByName( "votesLabel_txt" ) as TextField;			progressbar = getChildByName( "progress_mc" ) as Sprite;						answerLabel.autoSize = TextFieldAutoSize.LEFT;					}				/**		 * 		 * @param	answer		 * @param	votes		 * @param	colorIndex		 */				public function showAnswer( answer:String, votes:int, totalVotes:int, colorIndex:int ) {			var colorTransform:ColorTransform = new ColorTransform();			colorTransform.color = COLORS[ colorIndex % COLORS.length ];			progressbar.transform.colorTransform = colorTransform;						answerLabel.text = answer;			votesLabel.text = "0";						votesLabel.y = MappingManager.getBottom( answerLabel, this );			progressbar.y = votesLabel.y + MappingManager.getCentricPoint( votesLabel.height, progressbar.height );						progressbar.scaleX = 0;						if ( votes ) {				calculateObject.votesTempValue = 0;				Tweener.addTween( progressbar, { scaleX: votes / totalVotes, time: 1, transition: "easeInOutCubic" } );				Tweener.addTween( calculateObject, { votesTempValue: votes, time: 1, transition: "easeInOutCubic", onUpdate: onTweenUpdate } )			} else {				progressbar.width = 1;			}		}				public function dispose():void {			answerLabel = null;			votesLabel = null;			progressbar = null;		}				/**		 * 		 */				private function onTweenUpdate():void {			votesLabel.text = Math.round( calculateObject.votesTempValue ).toString();		}	}}