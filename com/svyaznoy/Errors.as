package com.svyaznoy {	import flash.events.Event;	import flash.events.IOErrorEvent;	import flash.events.SecurityErrorEvent;	/**	 * ...	 * @author Sergey Krivtsov (flashgangsta@gmail.com)	 */	public class Errors {				private static var instance:Errors;				/**		 * 		 */				public function Errors() {			if ( !instance ) {				instance = this;			} else {				throw new Error( "Errors has singletone, use Helper.getInstance()" );			}		}				public static function getInstance():Errors {			if ( !instance ) instance = new Errors();			return instance;		}				public function vkUsersGet( data:Object ):void {			traceError( "vkUsersGet", data );		}				public function ioError( event:Event ):void {			traceError( "ioError", event );		}				public function securityError( event:SecurityErrorEvent ):void {			traceError( "securityError", event );		}				public function dynamicImageSecurityError( event:SecurityErrorEvent ):void {			traceError( "dynamicImageSecurityError", event );		}				public function internalServerError( code:int ):void {			trace( "#", code, "Internal server error" );		}				public function loginError( data:Object ):void {			traceError( "loginError", data );		}				public function setEmployeeError( data:Object ):void {			traceError( "setEmployeeError", data );		}				public function setEmployeeConfirmationError(data:Object):void {			traceError( "setEmployeeConfirmationError", data );		}				public function onIntroDataError( data:Object ):void {			traceError( "onIntroDataError", data );		}				public function onDisableIntroError( data:Object ):void {			traceError( "onDisableIntroError", data );		}				public function onNewsListError( data:Object ):void {			traceError( "onDisableIntroError", data );		}				public function dynamicImageLoadError( event:IOErrorEvent ):void {			traceError( "dynamicImageLoadError", event );		}				public function onNewsDetailError( data:Object ):void {			traceError( "onNewsDetailError", data );		}				public function getLegendError( data:Object ):void {			traceError( "getLegendError", data );		}				public function getAboutError( data:Object ):void {			traceError( "getAboutError", data );		}				public function getThermsOfMotivationError( data:Object ):void {			traceError( "getThermsOfMotivationError", data );		}				public function onDeparturesListError( data:Object ):void {			traceError( "onDeparturesListError", data );		}				public function previewImageLoadError( event:Event ):void {			traceError( "previewImageLoadError", event );		}				public function videoInfoLoadError( event:IOErrorEvent ):void {			traceError( "videoInfoLoadError", event );		}				public function onRandomGalleriesError( data:Object ):void {			traceError( "onRandomGalleriesError", data );		}				public function onRandomVideosError( data:Object ):void {			traceError( "onRandomVideosError", data );		}				public function onLastGalleriesError( data:Object ):void {			traceError( "onLastGalleriesError", data );		}				public function onLastVideosError( data:Object ):void {			traceError( "onLastVideosError", data );		}				public function onGetDepartureError( data:Object ):void {			traceError( "onGetDepartureError", data );		}				public function onDepartureError( data:Object ):void {			traceError( "onDepartureError", data );		}				public function onGetGalleryPhotosError( data:Object ):void {			traceError( "onGetGalleryPhotosError", data );		}				public function onGetRandomSurveysError( data:Object ):void {			traceError( "onGetRandomSurveysError", data );		}				public function onGetLotteriesError( data:Object ):void {			traceError( "onGetLotteriesError", data );		}				public function onGetLotteriesByIDError( data:Object ):void {			traceError( "onGetLotteriesByIDError", data );		}				public function onGetEmployeeByIDError( data:Object ):void {			traceError( "onGetEmployeeByIDError", data );		}				public function onGetRatingsError( data:Object ):void {			traceError( "onGetRatingsError", data );		}				public function onSearchRatingsError( data:Object ):void {			traceError( "onSearchRatingsError", data );		}				public function onGetEmployeesLengthError( data:Object ):void {			traceError( "onGetEmployeesLengthError", data );		}				public function onGetOwnerRatingError( data:Object ):void {			traceError( "onGetEmployeesLengthError", data );					}				public function onSendAnswerError( data:Object ):void {			traceError( "onSendAnswerError", data );					}				public function onGetAnswersError( data:Object ):void {			traceError( "onSendAnswerError", data );		}				public function onGetOwnerAlbumsError( data:Object ):void {			traceError( "onGetOwnerAlbumsError", data );		}				public function onUpdatePhotoError( data:Object ):void {			traceError( "onUpdatePhotoError", data );		}				public function onDeletePhotoError( data:Object ):void {			traceError( "onDeletePhotoError", data );		}				public function onEmployeesPhotosError( data:Object ):void {			traceError( "onEmployeesPhotosError", data );		}				public function onSettingsError( data:Object ):void {			traceError( "onSettingsError", data );		}				public function onLastAnnouncementError( data:Object ):void {			traceError( "onLastAnnouncementError", data );					}				public function onAnnouncementError( data:Object ):void {			traceError( "onAnnouncementError", data );					}				public function onCommentsListError( data:Object ):void {			traceError( "onCommentsListError", data );					}				public function onCommentsCountError( data:Object ):void {			traceError( "onCommentsCountError", data );		}				public function onAddCommentError( data:Object ):void {			traceError( "onAddCommentError", data );					}				public function onTestsListError( data:Object ):void {			traceError( "onTestsListError", data );		}				public function onTestError( data:Object ):void {			traceError( "onTestError", data );		}				public function onTestResultsSendError( data:Object ):void {			traceError( "onTestResultsSendError", data );		}				public function onMyAchievementsError( data:Object ):void {			traceError( "onMyAchievementsError", data );		}				public function onEntryByInviteConfirmedError( data:Object ):void {			traceError( "onEntryByInviteConfirmedError", data );		}				public function onSetLastSeenAchievementError( data:Object ):void {			traceError( "onSetLastSeenAchievementError", data );		}				/**		 * 		 * @param	methodName		 * @param	data		 */				private function traceError( methodName:String, data:Object ):void {			trace( "#", methodName + "\n" + JSON.stringify( data ) );		}			}}