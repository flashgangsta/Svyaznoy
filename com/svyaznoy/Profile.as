package com.svyaznoy {	import com.flashgangsta.utils.LocalImageLoader;	import com.flashgangsta.utils.PopupsController;	import com.svyaznoy.events.ProviderEvent;	import com.svyaznoy.gui.Button;	import com.svyaznoy.gui.LabelWithIcon;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.net.FileFilter;	import flash.text.TextField;	/**	 * ...	 * @author Sergey Krivtsov (flashgangsta@gmail.com)	 */	public class Profile extends Screen {				public var usernameLabel:TextField;				private var helper:Helper = Helper.getInstance();		private var userData:UserData;		private var avatar:AvatarContainer;		private var totalStarsLabel:LabelWithIcon;		private var addPhotoButton:Button;		private var localImageLoader:LocalImageLoader;		private var popupsController:PopupsController = PopupsController.getInstance();		private var addPhotoPopup:AddPhoto;		private var departuresDatasList:Array;				public function Profile() {			usernameLabel = getChildByName( "usernameLabel_txt" ) as TextField;			avatar = getChildByName( "avatar_mc" ) as AvatarContainer;			totalStarsLabel = getChildByName( "totalStars_mc" ) as LabelWithIcon;			addPhotoButton = getChildByName( "addPhotoButton_mc" ) as Button;						// local images loader			var fileFiltersList:Array = [];			fileFiltersList.push( new FileFilter( "Изображения", "*.jpg;*.jpeg;*.gif;*.png" ) );			localImageLoader = new LocalImageLoader( fileFiltersList );			localImageLoader.addEventListener( Event.COMPLETE, onPhotoSelected );			addPhotoButton.addEventListener( MouseEvent.CLICK, onAddPhotoCalled );						//UserData			userData = helper.getUserData();						//UserName			usernameLabel.text = userData.nameAndSurname;						//Avatar			avatar.loadByPath( userData.photo200 );						//Provider			provider.addEventListener( ProviderEvent.ON_OWNER_RATING, onRating );			provider.addEventListener( ProviderEvent.ON_OWNER_ALBUMS, onAlbums );			provider.addEventListener( ProviderEvent.ON_DEPARTURES_LIST, onDeparturesList );			provider.getDeparturesList( null, null );			provider.getOwnerRating();			provider.getOwnerAlbums();						//this			addEventListener( Event.ADDED_TO_STAGE, onAddedToStage );		}				/**		 * 		 * @param	event		 */				private function onAddedToStage( event:Event ):void {			removeEventListener( Event.ADDED_TO_STAGE, onAddedToStage );			removePreloader();		}				/**		 * 		 * @param	event		 */				private function onDeparturesList( event:ProviderEvent ):void {			departuresDatasList = event.data as Array;			if ( addPhotoPopup ) {				addPhotoPopup.setDepartures( departuresDatasList );			}		}				/**		 * 		 * @param	event		 */				private function onPhotoSelected( event:Event ):void {			if ( !addPhotoPopup ) {				addPhotoPopup = new AddPhoto();				addPhotoPopup.addEventListener( Event.COMPLETE, onPhotoUploaded );				if ( departuresDatasList ) addPhotoPopup.setDepartures( departuresDatasList );			}			addPhotoPopup.init( localImageLoader.getBitmap() );			popupsController.showPopup( addPhotoPopup, true );		}				/**		 * 		 * @param	event		 */				private function onPhotoUploaded( event:Event ):void {			addPhotoPopup.getUploadedPhotoData();		}				/**		 * 		 * @param	event		 */				private function onAddPhotoCalled( event:MouseEvent ):void {			localImageLoader.browse();		}				/**		 * 		 * @param	event		 */				private function onAlbums( event:ProviderEvent ):void {					}				/**		 * 		 * @param	event		 */				private function onRating( event:ProviderEvent ):void {			provider.removeEventListener( ProviderEvent.ON_OWNER_RATING, onRating );			totalStarsLabel.value = event.data.rating;		}			}}